name: Django CI/CD

on:
  push:
    branches:
      - develop-finish
  pull_request:
    branches:
      - develop-finish

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

     
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      
      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false  
          tags: my-django-app:latest

  test:
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
    

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Add environment variables
        shell: bash
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "DEBUG=${{ secrets.DEBUG }}" >> $GITHUB_ENV

      - name: Run migrations
        env:
          DATABASE_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
        run: python manage.py migrate

      - name: Run tests
        env:
          DATABASE_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
        run: python manage.py test

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
    
  #     - name: Checkout code
  #       uses: actions/checkout@v3


  #     - name: Deploy to Server
  #       env:
  #         DB_NAME: ${{ secrets.DB_NAME }}
  #         DB_USER: ${{ secrets.DB_USER }}
  #         DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  #         DB_HOST: ${{ secrets.DB_HOST }}
  #         DB_PORT: ${{ secrets.DB_PORT }}
  #         SECRET_KEY: ${{ secrets.SECRET_KEY }}
  #         DEBUG: ${{ secrets.DEBUG }}
  #       run: |
  #         ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
  #         cd /path/to/project
  #         git pull origin develop-finish
  #         docker compose down
  #         docker compose up -d --build
  #         EOF
