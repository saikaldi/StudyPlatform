name: CI Pipeline for Develop
on:
  push:
    branches:
      - develop-finish 
  pull_request:
    branches:
      - develop-finish  
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout Code
        uses: actions/checkout@v3

    
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

     
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

    
      - name: Set Environment Variables
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          printf "SECRET_KEY=%s\n" "${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV

   
      - name: Run Tests
        env:
          DJANGO_SETTINGS_MODULE: config.settings
        run: |
          python manage.py test

  build:
    runs-on: ubuntu-latest
    needs: test  
  
    steps:
  
      - name: Checkout Code
        uses: actions/checkout@v3
  
   
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
  

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
 
      - name: Build Docker Image
        run: |
          docker build \
            --build-arg DB_NAME="${{ secrets.DB_NAME }}" \
            --build-arg DB_USER="${{ secrets.DB_USER }}" \
            --build-arg DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            --build-arg DB_HOST="${{ secrets.DB_HOST }}" \
            --build-arg DB_PORT="${{ secrets.DB_PORT }}" \
            --build-arg SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            -t saikal123/ort:develop-finish .
  
  
      - name: Push Docker Image
        run: |
          docker push saikal123/ort:develop-finish
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Remote Server
        env:
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        run: |
          sshpass -p "$REMOTE_PASSWORD" ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << EOF
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull saikal123/ort:develop-finish
            docker stop ort-app || true
            docker rm ort-app || true
            docker run -d --name ort-app \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              -e SECRET_KEY=${{ secrets.SECRET_KEY }} \
              -p 8000:8000 saikal123/ort:develop-finish
          EOF
