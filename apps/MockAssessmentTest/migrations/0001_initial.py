# Generated by Django 5.1.4 on 2025-02-04 19:33

import apps.MockAssessmentTest.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MockAssessmentTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='Введите корректный номер телефона', regex='^\\+?1?\\d{9,13}$')], verbose_name='Номер телефона')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('last_update_date', models.DateTimeField(auto_now=True, verbose_name='Дата последнего обновления')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Пробная запись на оценочный тест',
                'verbose_name_plural': 'Пробные записи на оценочные тесты',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100, verbose_name='Название пробного теста')),
                ('last_update_date', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
            },
        ),
        migrations.CreateModel(
            name='TestContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Порядковый номер вопроса')),
                ('question_text', models.TextField(blank=True, null=True, verbose_name='Вопрос в текстовом формате')),
                ('question_image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Вопрос в файловом формате')),
                ('additional_questions', models.TextField(blank=True, null=True, verbose_name='Дополнительный текст к вопросу')),
                ('var_A_image', models.ImageField(blank=True, null=True, upload_to=apps.MockAssessmentTest.models.upload_to_test, verbose_name="Вариант ответа 'A' (В файловом варианте)")),
                ('var_B_image', models.ImageField(blank=True, null=True, upload_to=apps.MockAssessmentTest.models.upload_to_test, verbose_name="Вариант ответа 'Б' (В файловом варианте)")),
                ('var_C_image', models.ImageField(blank=True, null=True, upload_to=apps.MockAssessmentTest.models.upload_to_test, verbose_name="Вариант ответа 'В' (В файловом варианте)")),
                ('var_D_image', models.ImageField(blank=True, null=True, upload_to=apps.MockAssessmentTest.models.upload_to_test, verbose_name="Вариант ответа 'Г' (В файловом варианте)")),
                ('var_E_image', models.ImageField(blank=True, null=True, upload_to=apps.MockAssessmentTest.models.upload_to_test, verbose_name="Вариант ответа 'Д' (В файловом варианте)")),
                ('var_A_text', models.TextField(blank=True, null=True, verbose_name="Вариант ответа 'А' (В текстовом варианте)")),
                ('var_B_text', models.TextField(blank=True, null=True, verbose_name="Вариант ответа 'Б' (В текстовом варианте)")),
                ('var_C_text', models.TextField(blank=True, null=True, verbose_name="Вариант ответа 'В' (В текстовом варианте)")),
                ('var_D_text', models.TextField(blank=True, null=True, verbose_name="Вариант ответа 'Г' (В текстовом варианте)")),
                ('var_E_text', models.TextField(blank=True, null=True, verbose_name="Вариант ответа 'Д' (В текстовом варианте)")),
                ('true_answer', models.CharField(choices=[('а', 'А'), ('б', 'Б'), ('в', 'В'), ('г', 'Г'), ('д', 'Д')], max_length=10, verbose_name='Правильный ответ')),
                ('last_update_date', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MockAssessmentTest.test', verbose_name='Тест')),
            ],
            options={
                'verbose_name': 'Вопрос теста',
                'verbose_name_plural': 'Вопросы тестов',
            },
        ),
        migrations.CreateModel(
            name='MockAssessmentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.IntegerField()),
                ('answer_vars', models.CharField(choices=[('а', 'А'), ('б', 'Б'), ('в', 'В'), ('г', 'Г'), ('д', 'Д')], max_length=1, verbose_name='Ответ студента')),
                ('last_update_date', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Правильный ответ?')),
                ('mock_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='MockAssessmentTest.mockassessmenttest')),
                ('test_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MockAssessmentTest.testcontent', verbose_name='Тест контент')),
            ],
            options={
                'verbose_name': 'Ответ на пробный тест',
                'verbose_name_plural': 'Ответы на пробные тесты',
            },
        ),
        migrations.CreateModel(
            name='TestFullDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_title', models.CharField(max_length=60, verbose_name='Название описания')),
                ('description_image', models.ImageField(upload_to='TestFullDescription/', verbose_name='Описаниев в формате изображения')),
                ('last_update_date', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MockAssessmentTest.test', verbose_name='Тест')),
            ],
            options={
                'verbose_name': 'Подробное описание теста',
                'verbose_name_plural': 'Подробные описания тестов',
            },
        ),
        migrations.CreateModel(
            name='TestInstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instruction_title', models.CharField(max_length=60, verbose_name='Название инструкции')),
                ('instruction_image', models.ImageField(blank=True, null=True, upload_to='TestInstruction/', verbose_name='Инструкция в формате изображения')),
                ('last_update_date', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MockAssessmentTest.test', verbose_name='Тест')),
            ],
            options={
                'verbose_name': 'Инструкция теста',
                'verbose_name_plural': 'Инструкции тестов',
            },
        ),
        migrations.CreateModel(
            name='UserStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('true_answer_count', models.PositiveIntegerField(default=0, verbose_name='Количество правильных ответов')),
                ('false_answer_count', models.PositiveIntegerField(default=0, verbose_name='Количество неправильных ответов')),
                ('last_update_date', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MockAssessmentTest.test', verbose_name='Тест')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MockAssessmentTest.mockassessmenttest', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Статистика ответов',
                'verbose_name_plural': 'Статистики ответов',
                'unique_together': {('test', 'user')},
            },
        ),
    ]
