version: '3.9'

services:
  django:
    build: .
    container_name: StudyPlatform
    ports:
      - "8000:8000"
    depends_on:
      - study_platform_postgres_db
    env_file:
      - .env
    environment:
      DEBUG: ${DEBUG}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    command: >
      sh -c "./wait-for-it.sh study_platform_postgres_db:5432 --
              python manage.py makemigrations --noinput &&
              python manage.py migrate --noinput &&
              python manage.py collectstatic --noinput &&
              gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/code
      - ./staticfiles:/app/staticfiles  # Может быть лишним
#      - ./staticfiles:/app/staticfiles  # Статические файлы
#      - ./media:/app/media  # Медиа файлы
    networks:
      - study_platform_network

#  nginx:
#    image: nginx:1.26.2
#    container_name: study_platform_nginx
#    depends_on:
#      - django
#    ports:
#      - "80:80"
#      - "443:443"  # Порт для HTTPS
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro  # read-only
##      - ./nginx/ssl:/etc/letsencrypt/live/api.recordonline.kg:ro  # read-only
#      - ./nginx/ssl:/code/nginx/ssl
##      - ./nginx/ssl_for_frontend:/code/nginx/ssl_for_frontend
#      - ./staticfiles:/app/staticfiles:ro
##     - ./staticfiles:/app/staticfiles:ro  # Статические файлы, только для чтения
#      - ./media:/app/media:ro  # Медиа файлы, только для чтения
#    networks:
#      - study_platform_network

  study_platform_postgres_db:
    image: postgres:16.6-alpine
    container_name: study_platform_postgres_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - study_platform_network

networks:
  study_platform_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
